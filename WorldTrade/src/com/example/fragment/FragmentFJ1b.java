package com.example.fragment;import java.util.ArrayList;import java.util.List;import org.apache.http.NameValuePair;import org.apache.http.message.BasicNameValuePair;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import com.example.worldtrade.GongsXiangQingActivity;import com.example.worldtrade.R;import com.lidroid.xutils.HttpUtils;import com.lidroid.xutils.exception.HttpException;import com.lidroid.xutils.http.RequestParams;import com.lidroid.xutils.http.ResponseInfo;import com.lidroid.xutils.http.callback.RequestCallBack;import com.lidroid.xutils.http.client.HttpRequest;import com.nostra13.universalimageloader.core.DisplayImageOptions;import com.nostra13.universalimageloader.core.ImageLoader;import com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer;import android.app.Activity;import android.content.Intent;import android.content.SharedPreferences;import android.graphics.Bitmap;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.v4.app.Fragment;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.ListView;import android.widget.ProgressBar;import android.widget.TextView;import android.widget.Toast;import android.widget.AdapterView.OnItemClickListener;public class FragmentFJ1b extends Fragment  {   private ListView mLv1;private Myadapter myadapter;private DisplayImageOptions options;private ArrayList<Data> mDataList_origin=new ArrayList<FragmentFJ1b.Data>();private ArrayList<Data> mDataList=new ArrayList<FragmentFJ1b.Data>();protected ImageLoader imageLoader = ImageLoader.getInstance();private ProgressBar progressBar_sale;private String userid;private String CHINESE;private View parentView;@Override@Nullablepublic View onCreateView(LayoutInflater inflater,		@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {			parentView = inflater.inflate(R.layout.fragment1a, container, false);		mLv1 =(ListView)parentView.findViewById(R.id.mLv1);		SharedPreferences mySharedPreferences= getActivity().getSharedPreferences("USER", Activity.MODE_PRIVATE); 		userid =mySharedPreferences.getString("id", "");		initData();		progressBar_sale =(ProgressBar)parentView.findViewById(R.id.progressBar_sale);		progressBar_sale.setVisibility(View.VISIBLE);	return parentView;}private void initData() {	downloadsearch("0");}public void downloadsearch(String area11){	 RequestParams params = new RequestParams();   List<NameValuePair> nameValuePairs=new ArrayList<NameValuePair>(10);   nameValuePairs.add(new BasicNameValuePair("id", userid));   nameValuePairs.add(new BasicNameValuePair("type", "2"));   params.addBodyParameter(nameValuePairs);   HttpUtils http = new HttpUtils();   http.send(HttpRequest.HttpMethod.POST,  		 "http://pine.i3.com.hk/trade/json/evaluationlist.php",           params,           new RequestCallBack<String>() {				private String msg;				@Override				public void onFailure(HttpException arg0, String arg1) {					// TODO Auto-generated method stub									}				@Override				public void onSuccess(ResponseInfo<String> arg0) {					JSONObject jsonObject;					try {						jsonObject = new JSONObject(arg0.result);						String string_code = jsonObject.getString("code");						 msg = jsonObject.getString("msg");						 int  num_code=Integer.valueOf(string_code);						 if (num_code==1) {							 //保存到本地							 mDataList_origin.clear();							 JSONArray array = jsonObject.getJSONArray("data");							  for (int i = 0; i < array.length(); i++) {								  								  Data  data=new Data();								  								 JSONObject jsonObject2 = array.getJSONObject(i);								 data.ID= jsonObject2.getString("id");								 data.Name= jsonObject2.getString("title");								 data.StreetName = jsonObject2.getString("answerTime");								 mDataList_origin.add(data);								 		                          data.toString();						 							}							  mDataList.clear();							  mDataList.addAll(mDataList_origin);								progressBar_sale.setVisibility(View.GONE);							  initListView();						}						 else {								progressBar_sale.setVisibility(View.GONE);								 Toast.makeText(getActivity(), msg, 0).show();						}					} catch (JSONException e) {								progressBar_sale.setVisibility(View.GONE);						e.printStackTrace();					}																			}			        });}private void initListView() {       myadapter = new Myadapter();              mLv1.setAdapter(myadapter);       mLv1.setOnItemClickListener(new OnItemClickListener() {			@Override			public void onItemClick(AdapterView<?> parent,					View view, int position, long id) {				Intent intent=new Intent(getActivity(), GongsXiangQingActivity.class);				intent.putExtra("ID", mDataList.get(position).ID);				startActivity(intent);			}		});	}private void initImageLoaderOptions() {	options = new DisplayImageOptions.Builder()			.showImageForEmptyUri(R.drawable.a)			.cacheInMemory()			.cacheOnDisc().displayer(new FadeInBitmapDisplayer(2000))			.bitmapConfig(Bitmap.Config.RGB_565).build();}class Holder{	TextView mTvri10,mTvri11,mTvri12;	ImageView imageView;}class  Myadapter extends   BaseAdapter{	@Override	public View getView(int position, View convertView, ViewGroup parent) {		        				Holder holder = null;		if(convertView==null){			convertView = LayoutInflater.from(getActivity())					.inflate(R.layout.item_listview_5, null);			holder = new Holder();			holder.mTvri10 =(TextView)convertView.findViewById(R.id.mTvri10);			holder.mTvri11 =(TextView)convertView.findViewById(R.id.mTvri14);			convertView.setTag(holder);		}else{			holder =(Holder)convertView.getTag();		}		holder.mTvri10.setText(mDataList.get(position).Name);		holder.mTvri11.setText(mDataList.get(position).StreetName);		/*	initImageLoaderOptions();		imageLoader.displayImage(mDataList.get(position).CoverPic,				holder.imageView, options);*/				return convertView;	}	@Override	public int getCount() {		// TODO Auto-generated method stub		return mDataList.size();	}	@Override	public Object getItem(int position) {		// TODO Auto-generated method stub		return null;	}	@Override	public long getItemId(int position) {		// TODO Auto-generated method stub		return 0;	}}class Data{	String   ID;	String   Name;	String   StreetName;	String   AreaGross;	String   AreaNet;	String   SellingPrice;	String   RentPrice;	String   CoverPic;	@Override	public String toString() {		return "Data [ID=" + ID + ", Name=" + Name + ", StreetName="				+ StreetName + ", AreaGross=" + AreaGross + ", AreaNet="				+ AreaNet + ", SellingPrice=" + SellingPrice				+ ", RentPrice=" + RentPrice + ", CoverPic=" + CoverPic				+ "]";	}	}      }