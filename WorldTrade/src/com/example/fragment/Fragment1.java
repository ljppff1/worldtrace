package com.example.fragment;import java.util.ArrayList;import java.util.List;import org.apache.http.NameValuePair;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import android.annotation.SuppressLint;import android.app.Activity;import android.content.Intent;import android.content.SharedPreferences;import android.graphics.Bitmap;import android.os.AsyncTask;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.v4.app.Fragment;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.RadioButton;import android.widget.RelativeLayout;import android.widget.ScrollView;import android.widget.TextView;import com.easemob.chat.EMChatManager;import com.easemob.exceptions.EaseMobException;import com.example.utils.Content;import com.example.view.pager.ViewFactory;import com.example.worldtrade.ChanPingXiangQingActivity;import com.example.worldtrade.R;import com.lidroid.xutils.HttpUtils;import com.lidroid.xutils.exception.HttpException;import com.lidroid.xutils.http.RequestParams;import com.lidroid.xutils.http.ResponseInfo;import com.lidroid.xutils.http.callback.RequestCallBack;import com.lidroid.xutils.http.client.HttpRequest;import com.nostra13.universalimageloader.core.DisplayImageOptions;import com.nostra13.universalimageloader.core.ImageLoader;import com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer;import com.tianshicoffeeom.app.imgscroll.MyImgScroll;@SuppressLint("NewApi")public class Fragment1 extends Fragment{	protected ImageLoader imageLoader = ImageLoader.getInstance();	private View parentView;	private MyImgScroll myPager;	private LinearLayout ovalLayout;	private ArrayList<View> listViews;	private RelativeLayout mRlf11;	private RelativeLayout mRlf12;    private boolean flag =true;	private com.example.view.MyListView mLvf11;	private com.example.view.MyListView mLvf12;    private ArrayList<Data> mDataList_origin=new ArrayList<Fragment1.Data>();    private ArrayList<Data> mDataList=new ArrayList<Fragment1.Data>();    private ArrayList<Data> mDataList1=new ArrayList<Fragment1.Data>();	private DisplayImageOptions options;	private Myadapter myadapter;    private int atemp =1;        private List<String> list =new ArrayList<String>();    private List<String> list1 =new ArrayList<String>();    private int preSelImgIndex = 0;	private com.example.view.MyGallery gallery;	private LinearLayout ll_focus_indicator_container;	private RelativeLayout mRltitle;	private static int PAGER_START_PLAY = 0x123;	private static final int PLAY_TIME = 3 * 1000;	private LinearLayout symbolContainer;	private ImageView[] circleSymbols;	private ImageView[] images;	private List<ImageView> views = new ArrayList<ImageView>();	private com.example.view.pager.CycleViewPager cycleViewPager;	private List<com.example.view.pager.ADInfo> infos = new ArrayList<com.example.view.pager.ADInfo>();	private LinearLayout mLLw;	private ScrollView ScrollView;	private ImageView mIvaa3;	private String CHINESE;	private TextView mTvw1;	private TextView mTvw2;	private String number;	private Myadapter1 myadapter1;    	@Override	@Nullable	public View onCreateView(LayoutInflater inflater,			@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {		parentView = inflater.inflate(R.layout.fragment1, container, false);				SharedPreferences mySharedPreferences= getActivity().getSharedPreferences("USER", Activity.MODE_PRIVATE); 		CHINESE =mySharedPreferences.getString("CHINESE","1");		number =mySharedPreferences.getString("number","");new Thread(new Runnable() {						@Override			public void run() {				try {					EMChatManager.getInstance().createAccountOnServer(number, "asdf22");				} catch (EaseMobException e) {					e.printStackTrace();				}			}		}).start();				mTvw1 =(TextView)parentView.findViewById(R.id.mTvw1);		mTvw2 =(TextView)parentView.findViewById(R.id.mTvw2);		if(CHINESE.equals("1")){			mTvw1.setText(R.string.aa1);			mTvw2.setText(R.string.aa2);			RadioButton main_tab_bar = (RadioButton)getActivity().findViewById(R.id.main_tab_item_jingxuan);			main_tab_bar.setText(R.string.CCmb1);			RadioButton main_tab_item_zhuanti = (RadioButton)getActivity().findViewById(R.id.main_tab_item_zhuanti);			main_tab_item_zhuanti.setText(R.string.CCmb2);			RadioButton main_add = (RadioButton)getActivity().findViewById(R.id.main_add);			main_add.setText(R.string.CCmb3);			RadioButton main_tab_item_hongdong = (RadioButton)getActivity().findViewById(R.id.main_tab_item_hongdong);			main_tab_item_hongdong.setText(R.string.CCmb4);			RadioButton main_tab_item_article = (RadioButton)getActivity().findViewById(R.id.main_tab_item_article);			main_tab_item_article.setText(R.string.CCmb5);		}else{			mTvw1.setText(R.string.aa1e);			mTvw2.setText(R.string.aa2e);			RadioButton main_tab_bar = (RadioButton)getActivity().findViewById(R.id.main_tab_item_jingxuan);			main_tab_bar.setText(R.string.CCmb1e);			RadioButton main_tab_item_zhuanti = (RadioButton)getActivity().findViewById(R.id.main_tab_item_zhuanti);			main_tab_item_zhuanti.setText(R.string.CCmb2e);			RadioButton main_add = (RadioButton)getActivity().findViewById(R.id.main_add);			main_add.setText(R.string.CCmb3e);			RadioButton main_tab_item_hongdong = (RadioButton)getActivity().findViewById(R.id.main_tab_item_hongdong);			main_tab_item_hongdong.setText(R.string.CCmb4e);			RadioButton main_tab_item_article = (RadioButton)getActivity().findViewById(R.id.main_tab_item_article);			main_tab_item_article.setText(R.string.CCmb5e);					}				mIvaa3 =(ImageView)parentView.findViewById(R.id.mIvaa3);		mIvaa3.setOnClickListener(listener);		myPager = (MyImgScroll)parentView. findViewById(R.id.myvp);		ovalLayout = (LinearLayout) parentView. findViewById(R.id.vb);		ScrollView =(ScrollView)parentView.findViewById(R.id.ScrollView);		/*InitViewPager();//初始化图片		//开始滚动		myPager.start(getActivity(), listViews, 4000, ovalLayout,				R.layout.ad_bottom_item, R.id.ad_item_v,				R.drawable.dot_focused, R.drawable.dot_normal);*/		mRlf11 =(RelativeLayout)parentView.findViewById(R.id.mRlf11);		mRlf12 =(RelativeLayout)parentView.findViewById(R.id.mRlf12);		mRlf11.setOnClickListener(listener);		mRlf12.setOnClickListener(listener);		mLvf11 =(com.example.view.MyListView)parentView.findViewById(R.id.mLvf11);		mLvf12 =(com.example.view.MyListView)parentView.findViewById(R.id.mLvf12);	       myadapter1 = new Myadapter1();	       mLvf12.setAdapter(myadapter1);		mLLw =(LinearLayout)parentView.findViewById(R.id.mLLw);		 downloadnavigation();		 //		initData();		 			if(flag){				flag=false;				mRlf11.setBackground(getResources().getDrawable(R.drawable.aa7));				mRlf12.setBackground(getResources().getDrawable(R.drawable.ra2));				ScrollView.setBackground(getResources().getDrawable(R.drawable.aa1));				mLLw.setBackground(getResources().getDrawable(R.drawable.ra6));				if(mDataList.size()<=0){				initData();				}			}else{			flag =true;			mRlf11.setBackground(getResources().getDrawable(R.drawable.aa8));			mRlf12.setBackground(getResources().getDrawable(R.drawable.ra1));			ScrollView.setBackground(getResources().getDrawable(R.drawable.rb4));			mLLw.setBackground(getResources().getDrawable(R.drawable.ra5));			if(mDataList1.size()<=0){			initData1();			}			}		 				atemp =1;		return parentView;	}	        private void downloadnavigation() {		new DownLoadAsyTask1().execute("http://pine.i3.com.hk/trade/json/advertisementlist.php");	}	    class DownLoadAsyTask1 extends AsyncTask<String, Void, String>{  		@Override		protected void onPostExecute(String result) {			super.onPostExecute(result);			JSONObject jsonObject;			try {				jsonObject = new JSONObject(result);				String string_code = jsonObject.getString("code");				 int  num_code=Integer.valueOf(string_code);				 if (num_code==1) {					 list.clear();					 JSONArray array = jsonObject.getJSONArray("data");					  for (int i = 0; i < array.length(); i++) {							JSONObject jsonObject2 = array.getJSONObject(i);							String CoverPic=jsonObject2.getString("img");                            //String PhotoLink =jsonObject2.getString("link");					   	    list.add(CoverPic);	 						//    list1.add(PhotoLink);				              	}											  InitViewPager();//初始化图片						//开始滚动						myPager.start(getActivity(), listViews, 4000, ovalLayout,								R.layout.ad_bottom_item, R.id.ad_item_v,								R.drawable.dot_focused, R.drawable.dot_normal);																}				 else {					 				 }			} catch (JSONException e) {			}						}						@Override			protected String doInBackground(String... params) {				String str=params[0];				return com.example.utils.getJson.getData(str);			}			}		private void initData() {		downloadsearch("0");	}	public void downloadsearch(String area11){		 parentView.findViewById(R.id.progressBar_sale).setVisibility(View.VISIBLE);		 RequestParams params = new RequestParams();       List<NameValuePair> nameValuePairs=new ArrayList<NameValuePair>(10);       params.addBodyParameter(nameValuePairs);       HttpUtils http = new HttpUtils();       http.send(HttpRequest.HttpMethod.POST,      		 "http://pine.i3.com.hk/trade/json/purchaselist.php",               params,               new RequestCallBack<String>() {					@Override					public void onFailure(HttpException arg0, String arg1) {											}					@Override					public void onSuccess(ResponseInfo<String> arg0) {						JSONObject jsonObject;						try {							jsonObject = new JSONObject(arg0.result);							String string_code = jsonObject.getString("code");							 int  num_code=Integer.valueOf(string_code);							 if (num_code==1) {								 //保存到本地								 mDataList_origin.clear();								 JSONArray array = jsonObject.getJSONArray("data");								  for (int i = 0; i < array.length(); i++) {									  									  Data  data=new Data();									  									 JSONObject jsonObject2 = array.getJSONObject(i);									 data.ID= jsonObject2.getString("id");									 data.Name= jsonObject2.getString("title");									 data.StreetName = jsonObject2.getString("num");									 data.CoverPic=jsonObject2.getString("img");									 data.SellingPrice=jsonObject2.getString("address");									 mDataList_origin.add(data);									 			                          data.toString();						 								}								  mDataList.clear();								  mDataList.addAll(mDataList_origin);									 parentView.findViewById(R.id.progressBar_sale).setVisibility(View.GONE);								  initListView();							}							 else {								 parentView.findViewById(R.id.progressBar_sale).setVisibility(View.GONE);								  mDataList.clear();								  initListView();							}						} catch (JSONException e) {							  mDataList.clear();							  initListView();													}																							}				                });	}		private void initData1() {		downloadsearch1("0");	}	public void downloadsearch1(String area11){			parentView.findViewById(R.id.progressBar_sale).setVisibility(View.VISIBLE);		 RequestParams params = new RequestParams();       List<NameValuePair> nameValuePairs=new ArrayList<NameValuePair>(10);       params.addBodyParameter(nameValuePairs);       HttpUtils http = new HttpUtils();       http.send(HttpRequest.HttpMethod.POST,      		 "http://pine.i3.com.hk/trade/json/productlist.php",               params,               new RequestCallBack<String>() {					@Override					public void onFailure(HttpException arg0, String arg1) {											}					@Override					public void onSuccess(ResponseInfo<String> arg0) {						JSONObject jsonObject;						try {							jsonObject = new JSONObject(arg0.result);							String string_code = jsonObject.getString("code");							 int  num_code=Integer.valueOf(string_code);							 if (num_code==1) {								 //保存到本地								 mDataList_origin.clear();								 JSONArray array = jsonObject.getJSONArray("data");								  for (int i = 0; i < array.length(); i++) {									  Data  data=new Data();									  									 JSONObject jsonObject2 = array.getJSONObject(i);									 data.ID= jsonObject2.getString("id");									 data.Name= jsonObject2.getString("title");									 data.StreetName = jsonObject2.getString("introduction");									 data.CoverPic=jsonObject2.getString("img");									 data.SellingPrice=jsonObject2.getString("address");									 									 mDataList_origin.add(data);									 			                          data.toString();						 								}								  mDataList1.clear();								  mDataList1.addAll(mDataList_origin);										parentView.findViewById(R.id.tv_noresut).setVisibility(View.GONE);										  initListView1();							}							 else {								 mDataList1.clear();								  initListView1();							}						} catch (JSONException e) {							mDataList1.clear();							  initListView1();						}																							}				                });	}		private void initListView() {		 parentView.findViewById(R.id.progressBar_sale).setVisibility(View.GONE);		 mLvf12.setVisibility(View.GONE);		 mLvf11.setVisibility(View.VISIBLE);	       myadapter = new Myadapter();	       mLvf11.setAdapter(myadapter);	       mLvf11.setOnItemClickListener(new OnItemClickListener() {				@Override				public void onItemClick(AdapterView<?> parent,						View view, int position, long id) {					if(flag){					Intent intent =new Intent(getActivity(),ChanPingXiangQingActivity.class);					intent.putExtra("id", mDataList.get(position).ID);                   if(!flag){                   	intent.putExtra("CC", "a");                   }else{                   	intent.putExtra("CC", "b");                   }					startActivity(intent);					}				}			});/*	       mLvf11.setSelection(0);	       ScrollView.scrollTo(0, 0);*/		}	private void initListView1() {		 parentView.findViewById(R.id.progressBar_sale).setVisibility(View.GONE);		 mLvf12.setVisibility(View.VISIBLE);		 mLvf11.setVisibility(View.GONE);		 myadapter1.notifyDataSetChanged();	       mLvf12.setOnItemClickListener(new OnItemClickListener() {				@Override				public void onItemClick(AdapterView<?> parent,						View view, int position, long id) {					if(flag){					Intent intent =new Intent(getActivity(),ChanPingXiangQingActivity.class);					intent.putExtra("id", mDataList.get(position).ID);                   if(!flag){                   	intent.putExtra("CC", "a");                   }else{                   	intent.putExtra("CC", "b");                   }					startActivity(intent);					}									}			});/*	       mLvf12.setSelection(0);	       ScrollView.scrollTo(0, 0);*/		}				private void initImageLoaderOptions() {		options = new DisplayImageOptions.Builder()				.showImageForEmptyUri(R.drawable.a)				.cacheInMemory()				.cacheOnDisc().displayer(new FadeInBitmapDisplayer(2000))				.bitmapConfig(Bitmap.Config.RGB_565).build();	}	class Holder{		TextView mTvri10,mTvri11,mTvri12;		ImageView imageView;	}	class  Myadapter extends   BaseAdapter{		@Override		public View getView(int position, View convertView, ViewGroup parent) {			        						Holder holder = null;			if(convertView==null){				convertView = LayoutInflater.from(getActivity())						.inflate(R.layout.item_listview_1x, null);				holder = new Holder();				holder.mTvri10 =(TextView)convertView.findViewById(R.id.mTvri10);				holder.mTvri11 =(TextView)convertView.findViewById(R.id.mTvri11);				holder.mTvri12 =(TextView)convertView.findViewById(R.id.mTvri12);				holder.imageView =(ImageView)convertView.findViewById(R.id.iv_listview_rent_pic);				convertView.setTag(holder);			}else{				holder =(Holder)convertView.getTag();			}			holder.mTvri11.setText(mDataList.get(position).Name);			holder.mTvri10.setText(mDataList.get(position).SellingPrice);			holder.mTvri12.setText(mDataList.get(position).StreetName);			initImageLoaderOptions();			imageLoader.displayImage(Content.ImageUrl+mDataList.get(position).CoverPic,					holder.imageView, options);						return convertView;		}		@Override		public int getCount() {			// TODO Auto-generated method stub			return mDataList.size();		}		@Override		public Object getItem(int position) {			// TODO Auto-generated method stub			return null;		}		@Override		public long getItemId(int position) {			// TODO Auto-generated method stub			return 0;		}	}					class  Myadapter1 extends   BaseAdapter{		@Override		public View getView(int position, View convertView, ViewGroup parent) {			        						Holder holder = null;			if(convertView==null){				convertView = LayoutInflater.from(getActivity())						.inflate(R.layout.item_listview_1, null);				holder = new Holder();				holder.mTvri10 =(TextView)convertView.findViewById(R.id.mTvri10);				holder.mTvri11 =(TextView)convertView.findViewById(R.id.mTvri11);				holder.mTvri12 =(TextView)convertView.findViewById(R.id.mTvri12);				holder.imageView =(ImageView)convertView.findViewById(R.id.iv_listview_rent_pic);				convertView.setTag(holder);				}else{				holder =(Holder)convertView.getTag();			}			holder.mTvri11.setText(mDataList1.get(position).Name);			holder.mTvri10.setText(mDataList1.get(position).SellingPrice);			holder.mTvri12.setText(mDataList1.get(position).StreetName);			initImageLoaderOptions();			imageLoader.displayImage(Content.ImageUrl+mDataList1.get(position).CoverPic,					holder.imageView, options);						return convertView;		}		@Override		public int getCount() {			// TODO Auto-generated method stub			return mDataList1.size();		}		@Override		public Object getItem(int position) {			// TODO Auto-generated method stub			return null;		}		@Override		public long getItemId(int position) {			// TODO Auto-generated method stub			return 0;		}	}	class Data{		String   ID;		String   Name;		String   StreetName;		String   AreaGross;		String   AreaNet;		String   SellingPrice;		String   RentPrice;		String   CoverPic;			}	OnClickListener listener =new OnClickListener() {				@Override		public void onClick(View v) {			switch (v.getId()) {			case R.id.mIvaa3:				SharedPreferences mySharedPreferences1= getActivity().getSharedPreferences("USER", Activity.MODE_PRIVATE); 				CHINESE =mySharedPreferences1.getString("CHINESE","1");				if(CHINESE.equals("0")){					mTvw1.setText(R.string.aa1);					mTvw2.setText(R.string.aa2);					RadioButton main_tab_bar = (RadioButton)getActivity().findViewById(R.id.main_tab_item_jingxuan);					main_tab_bar.setText(R.string.CCmb1);					RadioButton main_tab_item_zhuanti = (RadioButton)getActivity().findViewById(R.id.main_tab_item_zhuanti);					main_tab_item_zhuanti.setText(R.string.CCmb2);					RadioButton main_add = (RadioButton)getActivity().findViewById(R.id.main_add);					main_add.setText(R.string.CCmb3);					RadioButton main_tab_item_hongdong = (RadioButton)getActivity().findViewById(R.id.main_tab_item_hongdong);					main_tab_item_hongdong.setText(R.string.CCmb4);					RadioButton main_tab_item_article = (RadioButton)getActivity().findViewById(R.id.main_tab_item_article);					main_tab_item_article.setText(R.string.CCmb5);					SharedPreferences mySharedPreferences= getActivity().getSharedPreferences("USER", Activity.MODE_PRIVATE); 					SharedPreferences.Editor editor = mySharedPreferences.edit(); 					editor.putString("CHINESE", 1+""); 					editor.commit(); 				}else{					mTvw1.setText(R.string.aa1e);					mTvw2.setText(R.string.aa2e);					RadioButton main_tab_bar = (RadioButton)getActivity().findViewById(R.id.main_tab_item_jingxuan);					main_tab_bar.setText(R.string.CCmb1e);					RadioButton main_tab_item_zhuanti = (RadioButton)getActivity().findViewById(R.id.main_tab_item_zhuanti);					main_tab_item_zhuanti.setText(R.string.CCmb2e);					RadioButton main_add = (RadioButton)getActivity().findViewById(R.id.main_add);					main_add.setText(R.string.CCmb3e);					RadioButton main_tab_item_hongdong = (RadioButton)getActivity().findViewById(R.id.main_tab_item_hongdong);					main_tab_item_hongdong.setText(R.string.CCmb4e);					RadioButton main_tab_item_article = (RadioButton)getActivity().findViewById(R.id.main_tab_item_article);					main_tab_item_article.setText(R.string.CCmb5e);										SharedPreferences mySharedPreferences= getActivity().getSharedPreferences("USER", Activity.MODE_PRIVATE); 					SharedPreferences.Editor editor = mySharedPreferences.edit(); 					editor.putString("CHINESE", 0+""); 					editor.commit(); 				}				break;			case R.id.mRlf11:				if(flag){					flag=false;					mRlf11.setBackground(getResources().getDrawable(R.drawable.aa7));					mRlf12.setBackground(getResources().getDrawable(R.drawable.ra2));					ScrollView.setBackground(getResources().getDrawable(R.drawable.aa1));					mLLw.setBackground(getResources().getDrawable(R.drawable.ra6));					initData();				}				break;			case R.id.mRlf12:				if(!flag){				flag =true;				mRlf11.setBackground(getResources().getDrawable(R.drawable.aa8));				mRlf12.setBackground(getResources().getDrawable(R.drawable.ra1));				ScrollView.setBackground(getResources().getDrawable(R.drawable.rb4));				mLLw.setBackground(getResources().getDrawable(R.drawable.ra5));				initData1();				}				break;			default:				break;			}		}	};	private void InitViewPager() {		listViews = new ArrayList<View>();	//	listViews.add(ViewFactory.getImageView(getActivity(), "http://pine.i3.com.hk/trade/UPFILE/UserPhoto/small/201591511043226.jpg"));    for(int i=0;i< list.size();i++){    	listViews.add(ViewFactory.getImageView(getActivity(), Content.ImageUrl+list.get(i)));    }/*		int[] imageResId = new int[] { R.drawable.a, R.drawable.c,				 R.drawable.a, R.drawable.c,  R.drawable.a };		for (int i = 0; i < imageResId.length; i++) {			ImageView imageView = new ImageView(getActivity());			imageView.setOnClickListener(new OnClickListener() {				public void onClick(View v) {// 设置图片点击事件				}			});			imageView.setImageResource(imageResId[i]);			imageView.setScaleType(ScaleType.CENTER_CROP);			listViews.add(imageView);		}*/	}	}